{"ast":null,"code":"var _jsxFileName = \"/Users/nmufti/Desktop/REACT/SmartBrain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport ParticlesBg from \"particles-bg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  //We need to keep track of the input value in the input box\n  //So we need to create a state using constructor\n  constructor() {\n    super();\n    // We need to create a function that will listen to the input change\n    // and update the state\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log(\"click\");\n\n      // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n    };\n    this.state = {\n      input: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#ffffff\",\n        type: \"cobweb\",\n        bg: true,\n        num: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","App","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","fetch","MODEL_ID","requestOptions","then","response","text","result","catch","error","state","input","render","className","children","color","type","bg","num","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/nmufti/Desktop/REACT/SmartBrain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport ParticlesBg from \"particles-bg\";\nimport \"./App.css\";\n\nclass App extends Component {\n\t//We need to keep track of the input value in the input box\n\t//So we need to create a state using constructor\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput: \"\",\n\t\t};\n\t}\n\n\t// We need to create a function that will listen to the input change\n\t// and update the state\n\tonInputChange = (event) => {\n\t\tconsole.log(event.target.value);\n\t};\n\n\tonButtonSubmit = () => {\n\t\tconsole.log(\"click\");\n\n\t\t// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n\t\t// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n\t\t// this will default to the latest version_id\n\n\t\tfetch(\n\t\t\t\"https://api.clarifai.com/v2/models/\" +\n\t\t\t\tMODEL_ID +\n\t\t\t\t\"/versions/\" +\n\t\t\t\t\"/outputs\",\n\t\t\trequestOptions\n\t\t)\n\t\t\t.then((response) => response.text())\n\t\t\t.then((result) => console.log(result))\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ParticlesBg color=\"#ffffff\" type=\"cobweb\" bg={true} num={300} />\n\t\t\t\t<Navigation />\n\t\t\t\t<Logo />\n\t\t\t\t<Rank />\n\t\t\t\t<ImageLinkForm\n\t\t\t\t\tonInputChange={this.onInputChange}\n\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t\t/>\n\t\t\t\t{/* <FaceRecognition /> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASR,SAAS,CAAC;EAC3B;EACA;EACAS,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;IAMR;IACA;IAAA,KACAC,aAAa,GAAIC,KAAK,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAChC,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACtBJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;;MAEpB;MACA;MACA;;MAEAI,KAAK,CACJ,qCAAqC,GACpCC,QAAQ,GACR,YAAY,GACZ,UAAU,EACXC,cACD,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKX,OAAO,CAACC,GAAG,CAACU,MAAM,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,IAAKb,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEY,KAAK,CAAC,CAAC;IAChD,CAAC;IA5BA,IAAI,CAACC,KAAK,GAAG;MACZC,KAAK,EAAE;IACR,CAAC;EACF;EA2BAC,MAAMA,CAAA,EAAG;IACR,oBACCrB,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACnBvB,OAAA,CAACF,WAAW;QAAC0B,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE,IAAK;QAACC,GAAG,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjE/B,OAAA,CAACN,UAAU;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd/B,OAAA,CAACL,IAAI;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/B,OAAA,CAACH,IAAI;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR/B,OAAA,CAACJ,aAAa;QACbO,aAAa,EAAE,IAAI,CAACA,aAAc;QAClCM,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAER;AACD;AAEA,eAAe9B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}